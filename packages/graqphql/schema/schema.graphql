type Query {
  listStores(filter: ModelStoreFilterInput, limit: Int, skip: Int, sort: ModelStoreSortInput): [Store]
  listProfiles(storeId: String!, service: Service!, isConnected: Boolean): [Profile]
  getStore(uniqKey: ID!): Store
  listRules(filter: ModelRuleFilterInput, limit: Int, skip: Int): [Rule]
  getRule(id: ID!): Rule
  listProducts(filter: ModelProductFilterInput!, limit: Int, skip: Int): [Product]
  listUpdates(filter: ModelUpdateFilterInput!, limit: Int, skip: Int): [Update]
}


type Mutation {
  createStore(input: CreateStoreInput!): Store
  updateStore(input: UpdateStoreInput!): Store
  connectProfile(input: connectProfileInput!): [Profile]
  updateProfile(input: [updateProfileInput]!): [Profile]
  manageRule(input: RuleInput!): Rule
}


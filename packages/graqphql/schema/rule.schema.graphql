# enum
enum RuleTypes {
  old
  new
  sale
}

enum RuleQueueOption {
  pause
  replace
}

enum RulePostingTimeOptions {
  postImmediately
  postBetweenWithInterval
  customTimings
}

enum collectionOptions {
  selectProductsFromAll
  selectProductsFromSelected
  dontSelectProductsFromSelected
}

enum PostingSortOrder {
  random
  newest
}

enum ProfilePostingOptions {
  none
  facebookPostAsAlbum
  facebookPostAsLink
  facebookPostAsPhoto
  twitterPostAsSinglePhoto
  twitterPostAsMultiplePhoto
  twitterPostAsLink
}
# Type
type Rule {
  id: ID!
  store: Store!
  service: Service!
  type: RuleTypes!,
  profiles: [Profile]
  postingTimeOption: RulePostingTimeOptions # one of the option from the publish timing option (post between timings or custom timing sections)
  postTimings: [RulePostTimings]
  postAsOption: ProfilePostingOptions
  collectionOption: collectionOptions
  collections: [Collection]
  allowZeroQuantity: Boolean
  postAsVariants: Boolean
  postingProductOrder: PostingSortOrder
  repeatFrequency: Int
  rotateImages: Boolean
  rotateImageLimit: Int
  # selectedPostTimes: SelectedPostTimes
  captions: [Caption]
  active: Boolean
  createdAt: String
}
type Caption {  
  # collectionOption: collectionOptions
  collections: [Collection]
  isDefault: Boolean
  captionTexts: [String]
}

type SelectedPostTimes {
  dayName: String  
  dayKey: String  
  postingTimesTotal: Int
  isPaused: Boolean
  times: [Times]
}
type Times {
  hour: Int
  minute: Int
}
type RulePostTimings {
  postingInterval: Int
  startPostingHour: Int
  endPostingHour: Int
  postingHour: Int
  postingMinute: Int
  postingDays: [String]
}
# types

input RuleInput {
  id: ID
  store: ID!
  service: Service!
  type: RuleTypes!,
  profiles: [ID!]
  postingTimeOption: RulePostingTimeOptions
  postTimings: [RulePostTimingsInput]
  postAsOption: ProfilePostingOptions
  collectionOption: collectionOptions
  collections: [ID!]
  allowZeroQuantity: Boolean
  postAsVariants: Boolean
  postingProductOrder: PostingSortOrder
  repeatFrequency: Int
  rotateImages: Boolean
  rotateImageLimit: Int
  # selectedPostTimes: SelectedPostTimesInput
  captions: [CreateCaptionInput]  
  active: Boolean
}

input CreateCaptionInput {  
  # collectionOption: collectionOptions
  collections: [ID!]
  isDefault: Boolean
  captionTexts: [String]
}


input RulePostTimingsInput {
  postingInterval: Int #number of seconds.
  startPostingHour: Int
  endPostingHour: Int
  postingHour: Int
  postingMinute: Int
  postingDays: [String]
}

input SelectedPostTimesInput {
  dayName: String  
  dayKey: String    
  postingTimesTotal: Int 
  isPaused: Boolean
  times: [TimesInput]
}
input TimesInput {
  hour: Int
  minute: Int
}


input ModelRuleFilterInput {
  storeId: ID!
  service: Service!
  type: RuleTypes!
}


type Profile {
  id: ID!
  parent: Profile
  children: [Profile]
  name: String
  avatarUrl: String
  uniqKey: String
  serviceUsername: String
  serviceUserId: String
  profileURL: String
  accessToken: String
  accessTokenSecret: String
  service: Service
  serviceProfile: ServiceProfile
  isConnected: Boolean
  isTokenExpired: Boolean
  isSharePossible: Boolean
  store: Store
  createdAt: String  
  numberOfUpdatesScheduled: Int
  numberOfUpdatesPosted: Int
  numberOfUpdatesFailed: Int
  fbDefaultAlbum: String
  fbAlbums: [FbAlbum]
}
type connectInstagramMessage {
  message: String
  status: Int
}
input connectInstagramInput {
  storeId: String
  username: String
  password: String
  state: String
  verificationCode: String
}

type FbAlbum {
  albumId: String
  name: String
  type: String
}

input connectProfileInput {
  storeId: String!
  code: String
  service: Service!
  serviceProfile: ServiceProfile!
  oauthToken: String
  oauthVerifier: String
  oauthRequestTokenSecret: String
}

input updateConnectProfileInput {
  id: String!  
  isConnected: Boolean!
}
input updateProfileInput {  
  isTokenExpired: Boolean
  isConnected: Boolean
  fbDefaultAlbum: String
}
enum BufferUpdateStatus{
  pending
  sent
}

type bufferUpdateObject {
  total: Int
  updates: [bufferUpdates]
}

type bufferUpdates {
  id: String  
  day: String  
  dueTime: String
  status: String
  textFormatted: String 
  error: String
  media: bufferUpdateImage
}
type bufferUpdateImage {
  link: String
  description: String
  title: String
  thumbnail: String  
}

type updateDeleteResponse {
  success: String
}